name: YouTube Auto Factory - 4x Daily

on:
  workflow_dispatch:
    inputs:
      run_all_slots:
        description: 'Créer les 4 vidéos de la journée'
        required: false
        default: false
        type: boolean
  schedule:
    - cron: '0 6 * * *'   # 8h CEST
    - cron: '0 10 * * *'  # 12h CEST
    - cron: '0 14 * * *'  # 16h CEST
    - cron: '0 18 * * *'  # 20h CEST

jobs:
  generate-video:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: 📦 Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg espeak
        echo "✅ FFmpeg et eSpeak installés"
        
    - name: 🔧 Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        # Installation directe pour éviter les problèmes de fichiers
        pip install moviepy==1.0.3 Pillow==10.1.0 numpy==1.24.3
        pip install imageio==2.31.0 imageio-ffmpeg==0.4.9
        pip install requests==2.31.0 python-dotenv==1.0.0
        pip install edge-tts==6.1.9 gtts==2.5.1 aiohttp==3.9.1
        pip install pydub==0.25.1 opencv-python==4.8.1.78
        pip install colorama==0.4.6 decorator==4.4.2
        echo "✅ Toutes les dépendances installées"
        
    - name: 📁 Create output directories
      run: |
        mkdir -p output/videos
        mkdir -p output/audio  
        mkdir -p output/images
        mkdir -p output/logs
        echo "📁 Dossiers de sortie créés"
        
    - name: 🧪 Test system
      run: |
        echo "🧪 Test du système..."
        python -c "
        try:
            from content_factory.video_creator import VideoCreator
            from content_factory.audio_generator import AudioGenerator  
            from content_factory.image_manager import ImageManager
            print('✅ Tous les modules importés avec succès')
        except Exception as e:
            print(f'❌ Erreur import: {e}')
        "
        
    - name: 🎬 Create video for current slot
      if: ${{ !inputs.run_all_slots }}
      run: |
        echo "🕒 Début production vidéo pour créneau actuel..."
        python content_factory/auto_content_engine.py
        
    - name: 🎬 Create all daily videos  
      if: ${{ inputs.run_all_slots }}
      run: |
        echo "🕒 Début production des 4 vidéos quotidiennes..."
        python content_factory/auto_content_engine.py --all
        
    - name: 📤 Upload video artifacts
      uses: actions/upload-artifact@v4
      with:
        name: youtube-videos-${{ github.run_id }}
        path: output/
        retention-days: 1
        
    - name: 📊 Show production summary
      if: always()
      run: |
        echo "📊 RAPPORT DE PRODUCTION"
        echo "========================"
        echo "🕐 Heure: $(date)"
        echo ""
        echo "📹 Vidéos créées:"
        ls -la output/videos/*.mp4 2>/dev/null || echo "   Aucune vidéo"
        echo ""
        echo "🔊 Audios générés:"
        ls -la output/audio/*.mp3 2>/dev/null || echo "   Aucun audio"        find output/videos -name "*.mp4" -type f 2>/dev/null | while read file; do
          size=$(du -h "$file" | cut -f1)
          echo "   - $(basename "$file") ($size)"
        done || echo "   Aucune vidéo trouvée"
        echo ""
        echo "🔊 Fichiers audio:"
        find output/audio -name "*.mp3" -type f 2>/dev/null | while read file; do
          size=$(du -h "$file" | cut -f1)
          echo "   - $(basename "$file") ($size)"
        done || echo "   Aucun audio trouvé"
        echo ""
        echo "🖼️ Images générées:"
        find output/images -name "*.jpg" -type f 2>/dev/null | head -5 | while read file; do
          echo "   - $(basename "$file")"
        done
        count=$(find output/images -name "*.jpg" -type f 2>/dev/null | wc -l)
        echo "   Total: $count images"
        
    - name: 🚨 Notification on failure
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: '🚨 YouTube Auto Factory - Production Failed',
            body: 'La production vidéo a échoué. Veuillez vérifier les logs du workflow.'
          })
