# .github/workflows/daily-production.yml
# Workflow final optimis√© pour la production quotidienne.

name: üöÄ Production - Lancement Quotidien du Moteur

# ===============================================
# D√âCLENCHEURS
# ===============================================
on:
  # 1. Planification Quotidienne (ex: minuit UTC)
  schedule:
    # Lance le workflow tous les jours √† 00:00 UTC
    # Ajustez l'heure selon votre fuseau horaire et votre premier cr√©neau de publication
    - cron: '0 0 * * *' 
  
  # 2. Lancement Manuel avec mode Debug
  workflow_dispatch:
    inputs:
      debug_mode:
        description: 'Activer le mode Debug (true/false) pour le script Python.'
        required: true
        default: 'false'
        type: boolean
        
# Permissions de s√©curit√© minimales
permissions:
  contents: read # Lecture seule pour le checkout
  
jobs:
  daily_production_job:
    # Utilisation d'un conteneur Docker pour garantir la coh√©rence de l'environnement
    container:
      image: python:3.11-slim-buster # Image Python l√©g√®re et stable
      
    runs-on: ubuntu-latest
    
    # ===============================================
    # VARIABLES D'ENVIRONNEMENT GLOBALES
    # ===============================================
    env:
      # DEBUG_MODE lu depuis l'input manuel ou 'false' par d√©faut pour la planification
      DEBUG_MODE: ${{ github.event.inputs.debug_mode || 'false' }} 
      ENGINE_SCRIPT: 'content_factory/auto_content_engine.py'
      # Pas besoin de DISABLE_SCRIPT ici si l'upload est toujours requis en PROD
      OUTPUT_ROOT: 'output' # Correspond √† la configuration dans config.yaml
      
      # üîë INJECTION DES SECRETS DE PRODUCTION
      # Ces variables sont lues par le config_loader.py via le placeholder ${VARIABLE_NAME}
      YOUTUBE_CLIENT_ID: ${{ secrets.YOUTUBE_CLIENT_ID }}
      YOUTUBE_CLIENT_SECRET: ${{ secrets.YOUTUBE_CLIENT_SECRET }}
      YOUTUBE_REFRESH_TOKEN: ${{ secrets.YOUTUBE_REFRESH_TOKEN }}
      
    steps:
    
    # ‚¨áÔ∏è √âTAPE 1: Initialisation
    - name: ‚¨áÔ∏è Checkout du code
      uses: actions/checkout@v4
      with:
        path: app # Le code sera clon√© dans /app dans le conteneur
    
    # üì¶ √âTAPE 2: Installation des d√©pendances
    - name: üì¶ Pr√©paration de l'environnement
      working-directory: ./app # R√©pertoire de travail
      run: |
        echo "## Installation des d√©pendances Python"
        python -m pip install --upgrade pip setuptools
        
        # Installer les d√©pendances du projet
        # N√©cessite: moviepy, google-api-python-client, google-auth, PyYAML, etc.
        pip install -r requirements.txt
        
        # V√©rification critique de PyYAML pour le ConfigLoader
        pip show pyyaml
        
    # üöÄ √âTAPE 3: Ex√©cution du Moteur (Production)
    - name: üöÄ Lancement du Moteur de Contenu
      working-directory: ./app
      run: |
        echo "## D√©marrage du processus de g√©n√©ration et d'upload"
        echo "Mode Debug: ${{ env.DEBUG_MODE }}"
        
        # Lancement de l'Engine. Le code de sortie du script (0 ou 1) d√©terminera
        # le succ√®s ou l'√©chec de cette √©tape.
        # On passe le mode DEBUG en variable d'environnement au script python
        DEBUG_MODE=${{ env.DEBUG_MODE }} python "${{ env.ENGINE_SCRIPT }}"
          
    # üíæ √âTAPE 4: Sauvegarde des artefacts (Vid√©o finale, Audio, Images)
    # L'artefact est upload√© depuis le chemin de travail du conteneur (/app/output)
    - name: üíæ Sauvegarde des Artefacts de g√©n√©ration
      uses: actions/upload-artifact@v4
      if: always() # Toujours uploader pour analyse en cas d'√©chec
      with:
        name: resultats-${{ github.run_id }}
        path: app/${{ env.OUTPUT_ROOT }} 
        retention-days: 7 
        
    # üîî √âTAPE 5: Notifications (avec statut clair)
    - name: üîî Notification de Succ√®s
      if: success()
      run: |
        echo "üéâ Le workflow de production s'est termin√© avec succ√®s !"
        
    - name: üîî Notification d'√âchec
      if: failure()
      run: |
        echo "‚ùå √âCHEC CRITIQUE: Le workflow de production a √©chou√©. Consulter l'artefact pour les d√©tails."

